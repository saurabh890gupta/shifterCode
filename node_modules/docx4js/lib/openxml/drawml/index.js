"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _part = require("../part");

var _part2 = _interopRequireDefault(_part);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

exports.default = function (od) {
    return _extends({
        filter: ":not(a\\:extLst)",
        id: function id() {
            return undefined;
        }
    }, same("latin,ea,cs".split(","), function (_ref) {
        var _ref$attribs$typeface = _ref.attribs.typeface,
            typeface = _ref$attribs$typeface === undefined ? "" : _ref$attribs$typeface;
        return od.theme.font(typeface);
    }), same("lumMod,lumOff,tint,shade".split(","), function (_ref2) {
        var val = _ref2.attribs.val;
        return parseInt(val) / 100000;
    }), {
        tidy_schemeClr: function tidy_schemeClr(_ref3) {
            var val = _ref3.val,
                effect = _objectWithoutProperties(_ref3, ["val"]);

            return od.doc.asColor(od.theme.color(val), effect);
        },
        tidy_srgbClr: function tidy_srgbClr(_ref4) {
            var val = _ref4.val,
                effect = _objectWithoutProperties(_ref4, ["val"]);

            return od.doc.asColor(val, effect);
        },
        sysClr: function sysClr(_ref5) {
            var val = _ref5.attribs.val;
            return val;
        },
        tidy_solidFill: function tidy_solidFill(_ref6) {
            var color = _ref6.color;
            return color;
        },
        rot: function rot(v) {
            return parseInt(v) / 60000;
        },

        blip: function blip(n) {
            var _n$attribs = n.attribs,
                embed = _n$attribs["r:embed"],
                url = _n$attribs["r:link"];

            if (url) return { url: url };
            var part = od.$(n).part();
            return new _part2.default(part, od.doc).getRel(embed);
        },

        prstGeom: function prstGeom(x) {
            return x.attribs.prst;
        },
        pathLst: function pathLst(_ref7) {
            var children = _ref7.children;

            var px = function px(x) {
                return od.doc.emu2Px(x);
            };
            return children.filter(function (a) {
                return a.name == "a:path";
            }).reduce(function (d, path) {
                path.children.filter(function (a) {
                    return a.name;
                }).forEach(function (a) {
                    switch (a.name.split(":").pop()) {
                        case 'moveTo':
                            d.push('M ' + px(a.children[0].attribs.x) + ' ' + px(a.children[0].attribs.y));
                            break;
                        case 'lnTo':
                            d.push('L ' + px(a.children[0].attribs.x) + ' ' + px(a.children[0].attribs.y));
                            break;
                            break;
                        case 'cubicBezTo':
                            d.push('L ' + px(a.children[0].attr('x')) + ' ' + px(a.children[0].attr('y')));
                            d.push('Q ' + px(a.children[1].attr('x')) + ' ' + px(a.children[1].attr('y')) + ' ' + px(a.children[2].attr('x')) + ' ' + px(a.children[2].attr('y')));
                            break;
                        case 'arcTo':
                            d.push("A");
                            break;
                        case 'close':
                            d.push('Z');
                            break;
                    }
                });
                return d;
            }, []).join(" ");
        },

        tidy_custGeom: function tidy_custGeom(_ref8) {
            var pathLst = _ref8.pathLst;
            return pathLst;
        },

        lvl: function lvl(v) {
            return parseInt(v);
        },
        spcPts: function spcPts(_ref9) {
            var val = _ref9.attribs.val;
            return od.doc.pt2Px(parseInt(val) / 100);
        },
        tidy_spcAft: function tidy_spcAft(_ref10) {
            var a = _ref10.spcPts;
            return a;
        },
        tidy_spcBef: function tidy_spcBef(_ref11) {
            var a = _ref11.spcPts;
            return a;
        },

        buFont: function buFont(_ref12) {
            var typeface = _ref12.attribs.typeface;
            return typeface;
        },
        buChar: function buChar(_ref13) {
            var char = _ref13.attribs.char;
            return char;
        },
        buSzPts: function buSzPts(_ref14) {
            var val = _ref14.attribs.val;
            return od.doc.pt2Px(parseInt(val) / 100);
        },
        buSzPct: function buSzPct(_ref15) {
            var val = _ref15.attribs.val;
            return parseInt(val) / 1000 / 100;
        },
        buAutoNum: function buAutoNum(_ref16) {
            var attribs = _ref16.attribs;
            return _extends({}, attribs);
        },
        tidy_buClr: function tidy_buClr(_ref17) {
            var color = _ref17.color;
            return color;
        },

        indent: function indent(v) {
            return od.doc.emu2Px(v);
        },
        marL: function marL(v) {
            return od.doc.emu2Px(v);
        },

        ext: function ext(_ref18) {
            var _ref18$attribs = _ref18.attribs,
                cx = _ref18$attribs.cx,
                cy = _ref18$attribs.cy;
            return { width: od.doc.emu2Px(cx), height: od.doc.emu2Px(cy) };
        },
        off: function off(_ref19) {
            var _ref19$attribs = _ref19.attribs,
                x = _ref19$attribs.x,
                y = _ref19$attribs.y;
            return { x: od.doc.emu2Px(x), y: od.doc.emu2Px(y) };
        },
        tidy_xfrm: function tidy_xfrm(_ref20) {
            var _ref20$ext = _ref20.ext,
                ext = _ref20$ext === undefined ? {} : _ref20$ext,
                _ref20$off = _ref20.off,
                off = _ref20$off === undefined ? {} : _ref20$off,
                transform = _objectWithoutProperties(_ref20, ["ext", "off"]);

            return _extends({}, ext, off, transform);
        }

    }, same("ln,lnB,lnR,lnL,lnT,lnTlToBr,lnBlToTr".split(",").map(function (a) {
        return 'tidy_' + a;
    }), function (_ref21) {
        var w = _ref21.w,
            props = _objectWithoutProperties(_ref21, ["w"]);

        return _extends({}, props, { w: od.doc.emu2Px(w) });
    }), same("left,right,top,bottom".split(",").map(function (a) {
        return 'tidy_' + a;
    }), function (_ref22) {
        var ln = _ref22.ln;
        return ln;
    }), {
        tidy_tcTxStyle: function tidy_tcTxStyle(_ref23) {
            var color = _ref23.color,
                props = _objectWithoutProperties(_ref23, ["color"]);

            return _extends({}, props, { solidFill: color });
        },

        tidy_lnRef: function tidy_lnRef(_ref24) {
            var idx = _ref24.idx,
                ph = _objectWithoutProperties(_ref24, ["idx"]);

            return od.theme.lnRef(idx, ph);
        },
        tidy_fillRef: function tidy_fillRef(_ref25) {
            var idx = _ref25.idx,
                ph = _objectWithoutProperties(_ref25, ["idx"]);

            return od.theme.fillRef(idx, ph);
        },
        tidy_EffectRef: function tidy_EffectRef(_ref26) {
            var idx = _ref26.idx,
                ph = _objectWithoutProperties(_ref26, ["idx"]);

            return od.theme.effectRef(idx, ph);
        },
        tidy_fontRef: function tidy_fontRef(_ref27) {
            var idx = _ref27.idx,
                ph = _objectWithoutProperties(_ref27, ["idx"]);

            return od.theme.fontRef(idx, ph);
        },

        names: {
            schemeClr: "color", srgbClr: "color", sysClr: "color",
            prstGeom: "geometry", custGeom: "geometry",
            lnB: "bottom", lnR: "right", lnL: "left", lnT: "top",
            rot: "rotate"
        }
    });
};

var same = function same(keys, fx) {
    return keys.reduce(function (fs, k) {
        return fs[k] = fx, fs;
    }, {});
};
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,